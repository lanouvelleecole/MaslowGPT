{
  "gptOutput": "\n\n// PLOP_CODE_START\n// DeletePreviousLookalikeLine(): Efface la ligne de code identique, ou similaire à seq, dans le code source \n// du fichier situé au path filePath.\n// Entrées de la fonction: filePath (un string, le path du fichier qu'on veut modifier), \n// seq (un string, la ligne de code qu'on souhaite effacer).\n// Sorties de la fonction: code_source modifié, ou null si erreur.\nfunction DeletePreviousLookalikeLine(filePath, seq) {\n  // Crée une variable code_source à partir du fichier situé path filePath.\n  import code_source = fs.readFileSync(filePath, \"utf8\");\n\n  // Trouve l'index du 1er match total, ou partiel, de seq, dans code_source.\n  const seq_index = code_source.indexOf(seq);\n\n  // Trouve l'index du 1er \\n après seq_index, dans code_source.\n  const seq_end_index = code_source.indexOf(\"\\n\", seq_index);\n\n  // Efface le contenu commençant à seq_index, et se terminant à seq_end_index, dans code_source.\n  code_source = new_code_source.slice(0, seq_index) + new_code_source.slice(seq_end_index + 1);\n\n  try {\n    // Sauvegarde les changements dans le fichier situé path filePath.\n    fs.writeFileSync(filePath, code_source, \"utf8\");\n\n    return code_source;\n  } catch (err) {\n    // Retourne null si erreur.\n    return null;\n  }\n}\n\n// PLOP_CODE_END\n\n// PLOP_CODE_USE_START\nconst DeletePreviousLookalikeLineValue = DeletePreviousLookalikeLine(\"path/to/myfile.js\", \"search_pattern\");\n// PLOP_CODE_USE_END\n\n// PLOP_CODE_USE_RETURN_START\nreturn DeletePreviousLookalikeLineValue;\n// PLOP_CODE_USE_RETURN_END\n\n// PLOP_CODE_EXTENSION_START\njs\n// PLOP_CODE_EXTENSION_END\n\n// PLOP_CODE_EXPORT_START\nmodule.exports = {\n  DeletePreviousLookalikeLine,\n};\n// PLOP_CODE_EXPORT_END\n\n// PLOP_CODE_IMPORT_START\nconst DeletePreviousLookalikeLine from \"plop-templates/Commands/actions/DeletePreviousLookalikeLine/DeletePreviousLookalikeLine.js\");\n// PLOP_CODE_IMPORT_END\n\n// PLOP_CODE_IMPORT_RELATIVE_START\nconst DeletePreviousLookalikeLine = require(\"./DeletePreviousLookalikeLine/DeletePreviousLookalikeLine.js\";\n// PLOP_CODE_IMPORT_RELATIVE_END\n\n// PLOP_COMMAND_LINE_INSTALL_START\n# Install the fs library\n$ yarn add fs\n// PLOP_COMMAND_LINE_INSTALL_END\n\n// PLOP_INSPIRING_MESSAGE_START\n\"Success is not final, failure is not fatal: it is the courage to continue that counts.\"\n- Winston Churchill\n// PLOP_INSPIRING_MESSAGE_END",
  "mainCode": [
    "// DeletePreviousLookalikeLine(): Efface la ligne de code identique, ou similaire à seq, dans le code source \n// du fichier situé au path filePath.\n// Entrées de la fonction: filePath (un string, le path du fichier qu'on veut modifier), \n// seq (un string, la ligne de code qu'on souhaite effacer).\n// Sorties de la fonction: code_source modifié, ou null si erreur.\nfunction DeletePreviousLookalikeLine(filePath, seq) {\n  // Crée une variable code_source à partir du fichier situé path filePath.\n  const code_source = fs.readFileSync(filePath, \"utf8\");\n\n  // Trouve l'index du 1er match total, ou partiel, de seq, dans code_source.\n  const seq_index = code_source.indexOf(seq);\n\n  // Trouve l'index du 1er \\n après seq_index, dans code_source.\n  const seq_end_index = code_source.indexOf(\"\\n\", seq_index);\n\n  // Efface le contenu commençant à seq_index, et se terminant à seq_end_index, dans code_source.\n  code_source = new_code_source.slice(0, seq_index) + new_code_source.slice(seq_end_index + 1);\n\n  try {\n    // Sauvegarde les changements dans le fichier situé path filePath.\n    fs.writeFileSync(filePath, code_source, \"utf8\");\n\n    return code_source;\n  } catch (err) {\n    // Retourne null si erreur.\n    return null;\n  }\n}"
  ],
  "codeUsage": [
    "const DeletePreviousLookalikeLineValue = DeletePreviousLookalikeLine(\"path/to/myfile.js\", \"search_pattern\");"
  ],
  "codeExtension": ["js"],
  "inspiringMessage": [
    "\"Success is not final, failure is not fatal: it is the courage to continue that counts.\"\n- Winston Churchill"
  ],
  "codeImport": [
    "import DeletePreviousLookalikeLine from \"plop-templates/Commands/actions/DeletePreviousLookalikeLine/DeletePreviousLookalikeLine.js\";"
  ],
  "codeExport": ["module.exports = {\n  DeletePreviousLookalikeLine,\n};"],
  "codeImportRelative": [
    "import DeletePreviousLookalikeLine from \"./DeletePreviousLookalikeLine/DeletePreviousLookalikeLine.js\";"
  ],
  "codeUsageReturn": ["return DeletePreviousLookalikeLineValue;"],
  "codeInstall": ["# Install the fs library\n$ yarn add fs"],
  "function_import_type": "Path relatif",
  "function_returns_or_not": "Sans ligne return",
  "get_ai_service_language": "javascript (node.js)",
  "get_ai_service_args": "filePath (un string, le path du fichier qu'on veut modifier), seq (un string, la ligne de code qu'on souhaite effacer)",
  "get_ai_service_description": "Efface la ligne de code identique, ou similaire à seq, dans le code source du fichier situé au path filePath.",
  "get_ai_service_return_value": "crée une variable code_source = <le contenu du fichier situé path filePath>. crée une constante seq_index = <l'index du 1er match total, ou partiel, de seq, dans code_source. seq est une ligne de code informatique>. Crée une constante seq_end_index = <l'index du 1er \\n après seq_index, dans code_source>. Efface le contenu commençant à seq_index, et se terminant à seq_end_index, dans code_source. Sauvegarde ces changements dans le fichier situé path filePath. Retourne le code_source modifié, ou null si erreur."
}
